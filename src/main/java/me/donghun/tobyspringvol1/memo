20.7.14.
객체지향의 세계에서는 모든 것이 변한다.
여기서 변한다는 것은 오브젝트에 대한 설계와 이를 구현한 코드가 변한다는 뜻이다.
소프트웨어 개발에서 끝이란 개념은 없다.
그래서 개발자가 객체를 설계할 때 가장 염두에 둬야 할 사항은 바로 '미래의 변화를 어떻게 대비할 것인가'이다.

객체지향 기술은 변화에 효과적으로 대체할 수 있다.
객체지향 기술이 만들어내는 가상의 추상세계 자체를 효과적으로 구성할 수 있고,
이를 자유롭고 편리하게 변경, 발전, 확장시킬 수 있다.

어떻게 변경이 일어날 때 필요한 작업을 최소화하고, 그 변경이 다른 곳에 문제를 일으키지 않게 할 수 있을까?
분리와 확장을 고려한 설계가 필요하다.

모든 변경과 발전은 한 번에 한 가지 관심사항에 집중해서 일어난다.
하지만 그에 따른 작업은 한 곳에 집중되지 않는 경우가 많다면? ...
변화가 한 번에 한 가지 관심에 집중돼서 일어난다면, 우리가 준비해야 할 일은
한 가지 관심이 한 군데에 집중되게 하는 것이다.
즉 관심이 같은 것끼리는 모으고, 관심이 다른 것은 따로 떨어져 있게 하는 것이다.

UserDao의 메소드를 살펴보면 다음의 관심사항을 발견할 수 있다.
1. DB와 연결을 위한 connection 가져오기
-어떤 DB를 쓸 것인가
-어떤 드라이버를 사용할 것인가
-어떤 로그인 정보를 사용할 것인가
-connection 생성 방법은 어떻게 할 것인가

2. DB에 보낼 SQL 문장을 담을 Statement를 만들고 실행

3. 리소스(Statement, Connection) 반납


    1 단계. Connection 만들기 추출

가장 먼저 할 일은 connection을 가져오는 중복된 코드를 분리하는 것이다.
getConnection()이라는 이름의 독립적인 메소드를 만들자.